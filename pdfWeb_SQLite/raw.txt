app.py

from flask import Flask, render_template, request, redirect, send_from_directory
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)

# Configuration
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///database.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['UPLOAD_FOLDER'] = 'uploads'

db = SQLAlchemy(app)

# Database model for files
class File(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    filename = db.Column(db.String(200), nullable=False)
    display_name = db.Column(db.String(200), nullable=False)

# Create database tables
with app.app_context():
    db.create_all()

@app.route('/admin', methods=['GET', 'POST'])
def admin():
    if request.method == 'POST':
        password = request.form.get('password')
        if password == '123':  # Replace with your actual admin password
            files = request.files.getlist('file')
            names = request.form.getlist('display_name')
            if len(files) == len(names):  # Ensure each file has a corresponding display name
                for i, file in enumerate(files):
                    if file and names[i]:
                        filename = file.filename
                        file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
                        new_file = File(filename=filename, display_name=names[i])
                        db.session.add(new_file)
                        db.session.commit()
                return redirect('/admin')
            return 'Mismatch between files and names, please try again.', 400
        return 'Invalid password', 403
    
    files = File.query.all()
    return render_template('admin.html', files=files)

@app.route('/client')
def client():
    files = File.query.all()
    return render_template('client.html', files=files)

@app.route('/uploads/<filename>')
def uploaded_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)

@app.route('/download/<int:file_id>')
def download(file_id):
    file = File.query.get_or_404(file_id)
    return send_from_directory(app.config['UPLOAD_FOLDER'], file.filename, as_attachment=True)

@app.route('/delete/<int:file_id>')
def delete(file_id):
    file = File.query.get_or_404(file_id)
    filename = file.filename
    file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
    if os.path.exists(file_path):
        os.remove(file_path)
    db.session.delete(file)
    db.session.commit()
    return redirect('/admin')

if __name__ == '__main__':
    app.run(debug=True)






*******************************************************************

client.html

<!DOCTYPE html>
<html lang="en">
<head>
  <title>Client Dashboard</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h2>Available PDFs</h2><br>

    <div class="row mt-5">
      {% for file in files %}
      <div class="col-sm-4 mb-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">{{ file.display_name }}</h5>
            <a href="{{ url_for('uploaded_file', filename=file.filename) }}" class="btn btn-secondary">View</a>
            <a href="{{ url_for('download', file_id=file.id) }}" class="btn btn-primary">Download</a>
          </div>
        </div>
      </div>
      {% endfor %}
    </div>
</div>

</body>
</html>




****************************************************************************

admin.html

<!DOCTYPE html>
<html lang="en">
<head>
  <title>Admin Dashboard</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
</head>
<body>

<div class="container">
    <h2>Admin Dashboard</h2><br>

    <form action="/admin" method="POST" enctype="multipart/form-data">
        <div class="form-group">
          <label for="password">Admin Password:</label>
          <input type="password" class="form-control" id="password" name="password" required>
        </div>
        
        <div id="pdf-uploads">
          <div class="form-group">
            <label for="file">Select PDFs:</label>
            <input type="file" class="form-control" id="file" name="file" accept=".pdf" multiple required>
          </div>
          <div class="form-group">
            <label for="display_name">Display Names (comma-separated):</label>
            <input type="text" class="form-control" id="display_name" name="display_name" placeholder="Enter display names for each PDF, comma-separated" required>
          </div>
        </div>
        
        <button type="submit" class="btn btn-primary">Upload</button>
    </form>
    
    <div class="row mt-5">
      {% for file in files %}
      <div class="col-sm-4 mb-4">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">{{ file.display_name }}</h5>
            <a href="{{ url_for('uploaded_file', filename=file.filename) }}" class="btn btn-secondary">View</a>
            <a href="{{ url_for('download', file_id=file.id) }}" class="btn btn-primary">Download</a>
            <a href="{{ url_for('delete', file_id=file.id) }}" class="btn btn-danger">Delete</a>
          </div>
        </div>
      </div>
      {% endfor %}
    </div>
</div>

</body>
</html>
